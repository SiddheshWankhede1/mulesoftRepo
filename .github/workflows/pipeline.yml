name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CA_CLIENT_ID: ${{ secrets.CA_CLIENT_ID }}
      CA_CLIENT_SECRET: ${{ secrets.CA_CLIENT_SECRET }}
    
    steps:
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: 8
        distribution: 'zulu'
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package -s /home/runner/work/mulesoftRepo/mulesoftRepo/order-management/settings.xml -f /home/runner/work/mulesoftRepo/mulesoftRepo/order-management/pom.xml

 

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
    # Artifact name
         name: artifact
    # A file, directory or wildcard pattern that describes what to upload
         path: /home/runner/work/mulesoftRepo/mulesoftRepo/order-management/target/order-management-1.0.2-mule-application.jar

          
          
  upload:
    needs: build
    runs-on: ubuntu-latest
    env:
      CA_CLIENT_ID: ${{ secrets.CA_CLIENT_ID }}
      CA_CLIENT_SECRET: ${{ secrets.CA_CLIENT_SECRET }}

    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: artifact
    
          

          
   
         
       
    
 
        
  deploy:
    needs: upload
    runs-on: ubuntu-latest
    env:
      CA_CLIENT_ID: ${{ secrets.CA_CLIENT_ID }}
      CA_CLIENT_SECRET: ${{ secrets.CA_CLIENT_SECRET }}

    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: artifact
    
    - name: Deploy to CloudHub
      uses: mulesoft/mule-cloudhub-deployer@v1
      with:
        CA_CLIENT_ID: ${{ secrets.CA_CLIENT_ID }}
        CA_CLIENT_SECRET: ${{ secrets.CA_CLIENT_SECRET }}
        file: 'target/https://productionresultssa6.blob.core.windows.net/actions-results/07b4994f-6f3e-4708-8286-520a03fbcef0/workflow-job-run-ca395085-040a-526b-2ce8-bdc85f692774/artifacts/c7c5c1d70c5dec4416ab6158afd0b223ef40c29b1dc1f97ed9428b94d4cadb1c.zip' # Update with the path to your deployment package
