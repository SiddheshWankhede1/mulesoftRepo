name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CLIENTID: ${{ secrets.CLIENTID }}
      CLIENTSECRET: ${{ secrets.CLIENTSECRET }}
    
    steps:
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: order-management/pom.xml
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'zulu'
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package -s /home/runner/work/mulesoftRepo/mulesoftRepo/order-management/settings.xml -f /home/runner/work/mulesoftRepo/mulesoftRepo/order-management/pom.xml

    

          
          
          
  upload:
    needs: build
    runs-on: ubuntu-latest
    env:
      CLIENTID: ${{ secrets.CLIENTID }}
      CLIENTSECRET: ${{ secrets.CLIENTSECRET }}

    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: order-management/pom.xml
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    

    
    - name: Upload to Exchange
      run: mvn -B package -s /home/runner/work/mulesoftRepo/mulesoftRepo/order-management/settings.xml -f /home/runner/work/mulesoftRepo/mulesoftRepo/order-management/pom.xml
       
    
 
        
  deploy:
    needs: upload
    runs-on: ubuntu-latest
    env:
      CLIENTID: ${{ secrets.CLIENTID }}
      CLIENTSECRET: ${{ secrets.CLIENTSECRET }}

    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: order-management/pom.xml
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Sandbox
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -s order-management/settings.xml \
         -DskipTests \
