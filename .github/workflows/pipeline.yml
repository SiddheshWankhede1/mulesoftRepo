name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CLIENTID: ${{ secrets.CLIENTID }}
      CLIENTSECRET: ${{ secrets.CLIENTSECRET }}
    
    steps:
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: order-management/pom.xml
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'zulu'
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package -s /home/runner/work/mulesoftRepo/mulesoftRepo/order-management/settings.xml -f /home/runner/work/mulesoftRepo/mulesoftRepo/order-management/pom.xml

    
    - name: Stamp artifact file name with commit hash
  run: |
    # Check if any .jar files exist in the target directory
    if [ -n "$(ls target/*.jar 2>/dev/null)" ]; then
        # Get the name of the first .jar file
        artifactName1=$(ls target/*.jar | head -1)
        # Get the commit hash
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        # Create a new file name with the commit hash appended
        artifactName2=$(echo "$artifactName1" | sed "s/.jar/-$commitHash.jar/g")
        # Move the file with the new name
        mv "$artifactName1" "$artifactName2"
    else
        echo "No .jar files found in the target directory."
    fi

- name: Upload artifact 
  uses: actions/upload-artifact@master
  with:
      name: artifacts
      path: target/*.jar

          
          
          
  upload:
    needs: build
    runs-on: ubuntu-latest
    env:
      CLIENTID: ${{ secrets.CLIENTID }}
      CLIENTSECRET: ${{ secrets.CLIENTSECRET }}

    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: order-management/pom.xml
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Upload to Exchange
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy \
         -s order-management/settings.xml \
         -Dmule.artifact=$artifactName \
       
    
 
        
  deploy:
    needs: upload
    runs-on: ubuntu-latest
    env:
      CLIENTID: ${{ secrets.CLIENTID }}
      CLIENTSECRET: ${{ secrets.CLIENTSECRET }}

    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: order-management/pom.xml
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Sandbox
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -s order-management/settings.xml \
         -DskipTests \
